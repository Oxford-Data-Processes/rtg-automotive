name: Github Actions Pipeline

env:
  AWS_ACCOUNT_ID: "654654324108"

on:
  push:
    tags:
      - "**dev-deploy-*"

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Update or Install AWS CLI
        run: |
          curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -o awscliv2.zip
          sudo ./aws/install --update

      - name: Check AWS CLI Version
        run: aws --version

      - name: Assume AWS Role
        env:
          AWS_DEFAULT_REGION: eu-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          output=$(aws sts assume-role --role-arn arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/DevAdminRole --role-session-name MySession)
          echo "AWS_ACCESS_KEY_ID=$(echo $output | jq -r .Credentials.AccessKeyId)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $output | jq -r .Credentials.SecretAccessKey)" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $output | jq -r .Credentials.SessionToken)" >> $GITHUB_ENV

      - name: Terraform Setup & Apply
        run: |
          terraform fmt -check
          terraform init -backend-config=backend/backend_config_dev.tfvars
          terraform plan -no-color -var-file env_dev.tfvars
          terraform apply -auto-approve -var-file env_dev.tfvars

  # serverless:
  #   runs-on: ubuntu-latest
  #   needs: terraform
  #   env:
  #     SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  #     SLS_DEBUG: "*"
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Setup Node.js (18.x)
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x

  #     - name: Setup Python (3.11)
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: 3.11

  #     - name: Assume AWS Role
  #       env:
  #         AWS_DEFAULT_REGION: eu-west-2
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       run: |
  #         output=$(aws sts assume-role --role-arn arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/DevAdminRole --role-session-name MySession)
  #         echo "AWS_ACCESS_KEY_ID=$(echo $output | jq -r .Credentials.AccessKeyId)" >> $GITHUB_ENV
  #         echo "AWS_SECRET_ACCESS_KEY=$(echo $output | jq -r .Credentials.SecretAccessKey)" >> $GITHUB_ENV
  #         echo "AWS_SESSION_TOKEN=$(echo $output | jq -r .Credentials.SessionToken)" >> $GITHUB_ENV

  #     - name: Install Serverless
  #       run: |
  #         npm install -g serverless
  #         npm init -y
  #         npm install serverless-python-requirements
  #         serverless requirements install --stage dev

  #     - name: Deploy with Serverless
  #       run: |
  #         serverless deploy --stage dev