name: Github Actions Pipeline

env:
  AWS_ACCOUNT_ID: "654654324108"
  PROJECT_NAME: "rtg-automotive"

on:
  push:
    tags:
      - "**dev-deploy-*"

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # - name: Update or Install AWS CLI
      #   run: |
      #     curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip -o awscliv2.zip
      #     sudo ./aws/install --update

      - name: Check AWS CLI Version
        run: aws --version

      - name: Assume AWS Role
        env:
          AWS_DEFAULT_REGION: eu-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          output=$(aws sts assume-role --role-arn arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/DevAdminRole --role-session-name MySession)
          echo "AWS_ACCESS_KEY_ID=$(echo $output | jq -r .Credentials.AccessKeyId)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $output | jq -r .Credentials.SecretAccessKey)" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $output | jq -r .Credentials.SessionToken)" >> $GITHUB_ENV

      - name: Terraform Setup & Apply
        run: |
          terraform fmt -check
          terraform init -backend-config=backend/backend_config_dev.tfvars
          terraform plan -no-color -var-file env_dev.tfvars
          terraform apply -auto-approve -var-file env_dev.tfvars

  lambda:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      # - name: Update or Install AWS CLI
      #   run: |
      #     curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip -o awscliv2.zip
      #     sudo ./aws/install --update
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Check Python Version
        run: python --version

      - name: Check AWS CLI Version
        run: aws --version

      - name: Assume AWS Role
        env:
          AWS_DEFAULT_REGION: eu-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          output=$(aws sts assume-role --role-arn arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/DevAdminRole --role-session-name MySession)
          echo "AWS_ACCESS_KEY_ID=$(echo $output | jq -r .Credentials.AccessKeyId)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $output | jq -r .Credentials.SecretAccessKey)" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $output | jq -r .Credentials.SessionToken)" >> $GITHUB_ENV

      - name: Install SAM CLI
        run: |
          pip3 install aws-sam-cli

      - name: Build Lambda Function
        run: |
          sam build --template-file template.yml

      - name: Deploy All Lambda Functions
        run: |
          sam deploy --template-file template.yml \
                --stack-name testStack \
                --capabilities CAPABILITY_IAM \
                --parameter-overrides AWSAccountId=${{ env.AWS_ACCOUNT_ID }} ProjectName=${{ env.PROJECT_NAME }} \
                --region eu-west-2 \
                --resolve-s3

